@page "/areas"

@using System.Diagnostics
@using RentLibrary
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@*<h3>Арендаторы</h3>*@


@if (objects == null)
{
    <p><em>Загрузка данных...</em></p>
}
else
{

    <label for="objects">
        Объект
        <select @onchange="OnChangeObject">
            <option></option>
            @foreach (var obj in objects)
            {
                <option value="@obj.Id">@obj.Name</option>
            }
        </select>
    </label>
}
@if (layers != null)
{
    <label class ="ml-3" for="layers">
        Размещение
        <select @onchange="OnChangeLayer">
            <option></option>
            @foreach (var obj in layers)
            {
                <option value="@obj.Id">@obj.Name</option>
            }
        </select>
    </label>
}
<hr />
@*<p>(@x,@y)</p>*@

@if (area != null)
{
    <table class="table table-info table-sm">
        <thead>
            <tr>
                <th>ID</th>
                <th>Наименование</th>
                <th>Площадь,  м<sup>2</sup></th>
                <th>Цена за м<sup>2</sup>, EUR</th>
                <th>Стоимость, EUR</th>
                <th>Арендуется</th>
                <th>Дополнительно</th>
            </tr>
        </thead>

        <tbody>

            <tr valign="top">
                <td>@area.Id</td>
                <td>@area.AreaName</td>
                <td>@area.Square</td>
                <td>@area.Price</td>
                <td>@area.Cost</td>
                @if (area.isRented)
                {
                    <td>Да</td>
                    <td><a href="/renterdetails/@renter.Id.ToString()">Арендатор</a></td>
                }
                else
                {
                    <td>Да</td>
                    <td></td>
                }

            </tr>

        </tbody>
    </table>
}


<svg xmlns="http://www.w3.org/2000/svg" version="2.0" @onmousemove="OnMoveSVG" @ref="svgMain" @onclick="OnClick">
    @if (img_code.Length != 0)
    {
        <image x="0" y="0" href=@img_code></image>
    }

</svg>

<style>

    svg {
        width: 100%;
        height: 100vh;
        border: dashed;
        pointer-events: none;
    }

    image {
        cursor: pointer;
        pointer-events: all;
    }
</style>


@code {
    private IEnumerable<ObjectRect> objects;

    private LayerRect[] layers;

    private AreaRect[] areas;

    string img_code = "";

    public string id_layer;
    int x;
    int y;
    AreaRect area = null;
    RenterRect renter = null;

    ElementReference svgMain;

    protected override async Task OnInitializedAsync()
    {
        objects = await Http.GetJsonAsync<ObjectRect[]>("http://localhost:21475/api/Objects");
    }

    async Task OnChangeObject(ChangeEventArgs e)
    {
        Debug.WriteLine(e.Value);
        if (e.Value.ToString().Length > 0)
        {
            layers = await Http.GetJsonAsync<LayerRect[]>("http://localhost:21475/api/Layers/" + e.Value.ToString());
        }
        else
        {
            layers = null;
        }
        // await JsRuntime.InvokeVoidAsync("ShowAlert", "You clicked a line");
    }


    void OnChangeLayer(ChangeEventArgs e)
    {

        img_code = "data:image/png;base64," + Convert.ToBase64String(layers.First(l => l.Id.ToString() == e.Value.ToString()).LayerFile);
        //Debug.WriteLine(img_code);
        id_layer = e.Value.ToString();
    }


    async Task OnMoveSVG(MouseEventArgs e)
    {
        int[] pt = await JsRuntime.InvokeAsync<int[]>("GetRelativePos", svgMain, e);

        x = pt[0];
        y = pt[1];
    }

    async Task OnClick()
    {
        Debug.WriteLine("http://localhost:21475/api/Areas?id=" + id_layer + "&x=" + x.ToString() + "&y=" + y.ToString());
        area =
        await Http.GetJsonAsync<AreaRect>("http://localhost:21475/api/Areas?id=" + id_layer + "&x=" + x.ToString() + "&y=" + y.ToString());
        renter =  await Http.GetJsonAsync<RenterRect>("http://localhost:21475/api/Areas?id=" + area.Id.ToString());
    }



}
