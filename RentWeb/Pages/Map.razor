@page "/map"
@using RentLibrary
@inject HttpClient Http

@using GoogleMapsComponents
@using GoogleMapsComponents.Maps

<GoogleMap @ref="@mapMain" Id="map1" Options="@mapOptions" Height="800"></GoogleMap>

@code
{
    private GoogleMap mapMain;
    private MapOptions mapOptions;
    private Stack<Marker> markers = new Stack<Marker>();

    private ObjectRect[] objects;

    private async Task addMarker()
    {
        var objects = await Http.GetJsonAsync<ObjectRect[]>(ConnectAPI.apiUri+"/api/Objects");

        if (objects != null)
        {
            foreach (var o in objects)
            {
                Double.TryParse(o.Lat, out double _lat);
                Double.TryParse(o.Lon, out double _lon);

                var place = new LatLngLiteral() { Lat=_lat, Lng = _lon };

                var mo = new MarkerOptions() { Position = place, Map = mapMain.InteropObject, Title = o.Name + (char)13 + (char)10 + o.Address };

                var marker = await Marker.CreateAsync(mapMain.JsRuntime, mo);
                
                markers.Push(marker);

            }
        }
    }

    protected override async void OnInitialized()
    {
        mapOptions = new MapOptions()
        {
            Zoom = 12,
            Center = new LatLngLiteral()
            {
                Lat = 52.1040418,
                Lng = 23.689813
            },
            MapTypeId = MapTypeId.Hybrid
        };

        await addMarker();


    }

}

